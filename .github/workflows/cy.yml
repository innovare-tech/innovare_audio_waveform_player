name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      - name: Analyze project source
        run: dart analyze --fatal-infos

      - name: Run tests
        run: flutter test --coverage

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  build-example:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Build example app for web
        run: |
          cd example
          flutter pub get
          flutter build web --release

      - name: Build example app for Android
        run: |
          cd example
          flutter build apk --release

  publish-dry-run:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Check publish warnings
        run: dart pub publish --dry-run

  publish:
    runs-on: ubuntu-latest
    needs: [test, build-example]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.0'
          channel: 'stable'
          cache: true

      - name: Install dependencies
        run: flutter pub get

      - name: Setup Pub Credentials
        shell: bash
        env:
          PUB_DEV_PUBLISH_ACCESS_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_ACCESS_TOKEN }}
          PUB_DEV_PUBLISH_REFRESH_TOKEN: ${{ secrets.PUB_DEV_PUBLISH_REFRESH_TOKEN }}
          PUB_DEV_PUBLISH_TOKEN_ENDPOINT: ${{ secrets.PUB_DEV_PUBLISH_TOKEN_ENDPOINT }}
          PUB_DEV_PUBLISH_EXPIRATION: ${{ secrets.PUB_DEV_PUBLISH_EXPIRATION }}
        run: |
          sh -c "echo '{\"accessToken\":\"${PUB_DEV_PUBLISH_ACCESS_TOKEN}\",\"refreshToken\":\"${PUB_DEV_PUBLISH_REFRESH_TOKEN}\",\"tokenEndpoint\":\"${PUB_DEV_PUBLISH_TOKEN_ENDPOINT}\",\"scopes\":[\"openid\",\"https://www.googleapis.com/auth/userinfo.email\"],\"expiration\":${PUB_DEV_PUBLISH_EXPIRATION}}' > ~/.pub-cache/pub-credentials.json"

      - name: Check if version changed
        id: version
        run: |
          # Get current version from pubspec.yaml
          CURRENT_VERSION=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          
          # Check if this version already exists on pub.dev
          if curl -s "https://pub.dev/api/packages/innovare_audio_waveform_player" | grep -q "\"version\":\"$CURRENT_VERSION\""; then
            echo "version_exists=true" >> $GITHUB_OUTPUT
          else
            echo "version_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Publish to pub.dev
        if: steps.version.outputs.version_exists == 'false'
        run: dart pub publish --force